{"version":3,"file":"fabiangosebrink-angular-console-logger.js.map","sources":["ng://@fabiangosebrink/angular-console-logger/lib/logger.config.ts","ng://@fabiangosebrink/angular-console-logger/lib/angular-console-logger.service.ts","ng://@fabiangosebrink/angular-console-logger/lib/angular-console-logger.component.ts","ng://@fabiangosebrink/angular-console-logger/lib/angular-console-logger.module.ts"],"sourcesContent":["export class LoggerConfig {\r\n  isProduction: boolean;\r\n  appPrefix: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { LoggerConfig } from './logger.config';\n\nexport abstract class AbstractLoggerService {\n  abstract warn(message: string);\n  abstract error(message: string);\n  abstract info(message: string);\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularConsoleLoggerService implements AbstractLoggerService {\n  constructor(private loggerConfig: LoggerConfig) {}\n  warn(message: string) {\n    if (this.loggerConfig.isProduction) {\n      return;\n    }\n    console.warn(`${this.loggerConfig.appPrefix}: ${message}`);\n  }\n  error(message: string) {\n    console.error(`${this.loggerConfig.appPrefix}: ${message}`);\n  }\n  info(message: string) {\n    if (this.loggerConfig.isProduction) {\n      return;\n    }\n    console.log(`${this.loggerConfig.appPrefix}: ${message}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-angular-console-logger',\n  template: `\n    <p>\n      angular-console-logger works!\n    </p>\n  `,\n  styles: []\n})\nexport class AngularConsoleLoggerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AngularConsoleLoggerComponent } from './angular-console-logger.component';\nimport { LoggerConfig } from './logger.config';\n\n@NgModule({\n  imports: [],\n  declarations: [AngularConsoleLoggerComponent],\n  exports: [AngularConsoleLoggerComponent],\n})\nexport class AngularConsoleLoggerModule {\n  public static forRoot(configuration: LoggerConfig): ModuleWithProviders {\n    return {\n      ngModule: AngularConsoleLoggerModule,\n      providers: [\n        {\n          provide: LoggerConfig,\n          useValue: configuration,\n        },\n      ],\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;IAAA;KAGC;IAAD,mBAAC;CAAA;;;;;;ACHD;;;AAGA;;;;IAAA;KAIC;IAAD,4BAAC;CAAA,IAAA;;IAMC,qCAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;KAAI;;;;;IAClD,0CAAI;;;;IAAJ,UAAK,OAAe;QAClB,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAClC,OAAO;SACR;QACD,OAAO,CAAC,IAAI,CAAI,IAAI,CAAC,YAAY,CAAC,SAAS,UAAK,OAAS,CAAC,CAAC;KAC5D;;;;;IACD,2CAAK;;;;IAAL,UAAM,OAAe;QACnB,OAAO,CAAC,KAAK,CAAI,IAAI,CAAC,YAAY,CAAC,SAAS,UAAK,OAAS,CAAC,CAAC;KAC7D;;;;;IACD,0CAAI;;;;IAAJ,UAAK,OAAe;QAClB,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAClC,OAAO;SACR;QACD,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,YAAY,CAAC,SAAS,UAAK,OAAS,CAAC,CAAC;KAC3D;;gBAnBF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAVQ,YAAY;;;sCADrB;CASA;;;;;;ACTA;IAaE;KAAiB;;;;IAEjB,gDAAQ;;;IAAR;KACC;;gBAdF,SAAS,SAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,QAAQ,EAAE,8DAIT;iBAEF;;;;IAQD,oCAAC;CAhBD;;;;;;ACFA;IAIA;KAiBC;;;;;IAXe,kCAAO;;;;IAArB,UAAsB,aAA2B;QAC/C,OAAO;YACL,QAAQ,EAAE,0BAA0B;YACpC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,YAAY;oBACrB,QAAQ,EAAE,aAAa;iBACxB;aACF;SACF,CAAC;KACH;;gBAhBF,QAAQ,SAAC;oBACR,OAAO,EAAE,EAAE;oBACX,YAAY,EAAE,CAAC,6BAA6B,CAAC;oBAC7C,OAAO,EAAE,CAAC,6BAA6B,CAAC;iBACzC;;IAaD,iCAAC;CAjBD;;;;;;;;;;;;;;"}

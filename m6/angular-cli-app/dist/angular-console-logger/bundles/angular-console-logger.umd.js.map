{"version":3,"file":"angular-console-logger.umd.js.map","sources":["ng://angular-console-logger/lib/logger.config.ts","ng://angular-console-logger/lib/angular-console-logger.service.ts","ng://angular-console-logger/lib/angular-console-logger.component.ts","ng://angular-console-logger/lib/angular-console-logger.module.ts"],"sourcesContent":["export class LoggerConfig {\r\n  isProduction: boolean;\r\n  appPrefix: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { LoggerConfig } from './logger.config';\n\nexport abstract class AbstractLoggerService {\n  abstract warn(message: string);\n  abstract error(message: string);\n  abstract info(message: string);\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularConsoleLoggerService implements AbstractLoggerService {\n  constructor(private loggerConfig: LoggerConfig) {}\n  warn(message: string) {\n    if (this.loggerConfig.isProduction) {\n      return;\n    }\n    console.warn(`${this.loggerConfig.appPrefix}: ${message}`);\n  }\n  error(message: string) {\n    console.error(`${this.loggerConfig.appPrefix}: ${message}`);\n  }\n  info(message: string) {\n    if (this.loggerConfig.isProduction) {\n      return;\n    }\n    console.log(`${this.loggerConfig.appPrefix}: ${message}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-angular-console-logger',\n  template: `\n    <p>\n      angular-console-logger works!\n    </p>\n  `,\n  styles: []\n})\nexport class AngularConsoleLoggerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AngularConsoleLoggerComponent } from './angular-console-logger.component';\nimport { LoggerConfig } from './logger.config';\n\n@NgModule({\n  imports: [],\n  declarations: [AngularConsoleLoggerComponent],\n  exports: [AngularConsoleLoggerComponent],\n})\nexport class AngularConsoleLoggerModule {\n  public static forRoot(configuration: LoggerConfig): ModuleWithProviders {\n    return {\n      ngModule: AngularConsoleLoggerModule,\n      providers: [\n        {\n          provide: LoggerConfig,\n          useValue: configuration,\n        },\n      ],\n    };\n  }\n}\n"],"names":["Injectable","Component","NgModule"],"mappings":";;;;;;;;;;AAAA;QAAA;SAGC;QAAD,mBAAC;IAAD,CAAC;;;;;;ACHD;;;AAGA;;;QAAA;SAIC;QAAD,4BAAC;IAAD,CAAC,IAAA;;QAMC,qCAAoB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;SAAI;;;;;QAClD,0CAAI;;;;YAAJ,UAAK,OAAe;gBAClB,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;oBAClC,OAAO;iBACR;gBACD,OAAO,CAAC,IAAI,CAAI,IAAI,CAAC,YAAY,CAAC,SAAS,UAAK,OAAS,CAAC,CAAC;aAC5D;;;;;QACD,2CAAK;;;;YAAL,UAAM,OAAe;gBACnB,OAAO,CAAC,KAAK,CAAI,IAAI,CAAC,YAAY,CAAC,SAAS,UAAK,OAAS,CAAC,CAAC;aAC7D;;;;;QACD,0CAAI;;;;YAAJ,UAAK,OAAe;gBAClB,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;oBAClC,OAAO;iBACR;gBACD,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,YAAY,CAAC,SAAS,UAAK,OAAS,CAAC,CAAC;aAC3D;;oBAnBFA,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;wBAVQ,YAAY;;;;0CADrB;KASA;;;;;;ACTA;QAaE;SAAiB;;;;QAEjB,gDAAQ;;;YAAR;aACC;;oBAdFC,YAAS,SAAC;wBACT,QAAQ,EAAE,4BAA4B;wBACtC,QAAQ,EAAE,8DAIT;qBAEF;;;;QAQD,oCAAC;KAhBD;;;;;;ACFA;QAIA;SAiBC;;;;;QAXe,kCAAO;;;;YAArB,UAAsB,aAA2B;gBAC/C,OAAO;oBACL,QAAQ,EAAE,0BAA0B;oBACpC,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,YAAY;4BACrB,QAAQ,EAAE,aAAa;yBACxB;qBACF;iBACF,CAAC;aACH;;oBAhBFC,WAAQ,SAAC;wBACR,OAAO,EAAE,EAAE;wBACX,YAAY,EAAE,CAAC,6BAA6B,CAAC;wBAC7C,OAAO,EAAE,CAAC,6BAA6B,CAAC;qBACzC;;QAaD,iCAAC;KAjBD;;;;;;;;;;;;;;;;;;;;;;;;;;"}

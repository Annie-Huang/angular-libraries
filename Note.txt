m4: in m4 folder
m5: in root folder


#################################
## M4 
#################################

D:\react\angular-libraries\m4\demo1-first-javascript-module\commonjs>node main.js

------------

D:\react\angular-libraries\m4\demo2-first-typescript-module\typescript>tsc -v
Version 2.4.2

D:\react\angular-libraries\m4\demo2-first-typescript-module\typescript>tsc      << to create the dist directory

D:\react\angular-libraries\m4\demo2-first-typescript-module\typescript>cd dist

D:\react\angular-libraries\m4\demo2-first-typescript-module\typescript\dist>node main.js
hello world

--------------

Inside tsconfig.json, if you change module to:
"module": "commonjs"
"module": "amd"		<< node doesn't not amd

Or change target to:
"target": "es5"
"target": "es6"

And the run tsc to transpile it. You can see change in the dist/main.js and dist/print-module.js file.

{
    "compilerOptions": {
        "outDir": "./dist/",
        "module": "commonjs", // let is be xx modules
        "target": "es5" // created modules should be  in the xx syntax
    },
    "include": ["./"]
}

-------------------

D:\react\angular-libraries\m4\demo3-typescript-package\first-ts-package>npm run build

> my-first-library@0.0.1 build D:\react\angular-libraries\m4\demo3-typescript-package\first-ts-package
> tsc


D:\react\angular-libraries\m4\demo3-typescript-package\first-consumer>npm link ..\first-ts-package
npm WARN my-first-library@0.0.1 No description
npm WARN my-first-library@0.0.1 No repository field.
npm WARN my-first-library@0.0.1 No license field.

up to date in 0.965s
found 0 vulnerabilities

C:\Users\Annie\AppData\Roaming\npm\node_modules\my-first-library -> D:\react\angular-libraries\m4\demo3-typescript-package\first-ts-package
D:\react\angular-libraries\m4\demo3-typescript-package\first-consumer\node_modules\my-first-library -> C:\Users\Annie\AppData\Roaming\npm\node_modules\my-first-library -> D:\react\angular-libra
ries\m4\demo3-typescript-package\first-ts-package

-------------------

D:\react\angular-libraries\m4\demo3-typescript-package\first-consumer>npm start

> first-consumer@1.0.0 start D:\react\angular-libraries\m4\demo3-typescript-package\first-consumer
> tsc && cd dist && node main.js

12

#################################
## M5 
#################################

https://docs.google.com/document/d/1CZC2rcpxffTDfRDs6p1cfbmKNLA6x5O-NtkJglDaBVs/preview

Steps to Produce an Angular Library
- Inlining all the templates	<< This is required by the ng-packagr, @angular-devkit/build-ng-packagr

What will be created in ngc?
Module definitions	bundles / esm5 / esm2015 / fesm5 / fesm2015	<< all folders
Typings			my-first.d.ts, public_api.d.ts
Ahead-of-time metadata	my-first.metadata.json
Entrypoint		public_api.d.ts


D:\react\angular-libraries\m5>npm install ng-packagr -g


D:\Temp\ea-component-library\projects\ea-ui\package.json
{
  "name": "@ea/ea-ui",
  "version": "1.3.0",
  "peerDependencies": {
    "@angular/common": "^7.1.0",
    "@angular/core": "^7.1.0",
    "dayjs": "^1.8.10"
  },
  "dependencies": {
    "ngx-take-until-destroy": "^5.4.0",
    "ngx-mask": "^7.7.0"
  },
  "ngPackage": {
    "dest": "../../dist/ea-ui",
    "whitelistedNonPeerDependencies": [
      "ngx-take-until-destroy",
      "ngx-mask"
    ],
    "lib": {
      "styleIncludePaths": [
        "./src/assets/scss"
      ]
    }
  }
}

D:\Temp\ea-component-library\projects\ea-ui\ng-package.json
{
  "$schema": "../../node_modules/ng-packagr/ng-package.schema.json",
  "dest": "../../dist/ea-ui",
  "lib": {
    "entryFile": "src/public_api.ts"
  }
}

---------

D:\react\angular-libraries>ng new ng-packagr-demo1
? Would you like to add Angular routing? No
? Which stylesheet format would you like to use? CSS


D:\react\angular-libraries\ng-packagr-demo1>npm install ng-packagr tsickle --save-dev		<< This two are use for building library.
    "ng-packagr": "^4.2.0",
    "tsickle": ">=0.29.0",
are the libraries that ng-packagr depends on.


--------


D:\Temp\ea-component-library>npm run build-lib

> ea-component-library@1.0.0 build-lib D:\Temp\ea-component-library
> ng build ea-ui

Building Angular Package
Building entry point '@ea/ea-ui'
Compiling TypeScript sources through ngc
Bundling to FESM2015
...
Bundling to FESM5
...
Bundling to UMD
...
Minifying UMD bundle
...
Copying declaration files
Writing package metadata
Removing scripts section in package.json as it's considered a potential security vulnerability.
Built @ea/ea-ui
Built Angular Package!
 - from: D:\Temp\ea-component-library\projects\ea-ui
 - to:   D:\Temp\ea-component-library\dist\ea-ui



ng build ea-ui is calling: "ng-opackagr -p ea-ui/package.json" underneath....



D:\react\angular-libraries\ng-packagr-demo1>npm run build-lib

> ng-packagr-demo1@0.0.0 build-lib D:\react\angular-libraries\ng-packagr-demo1
> ng-packagr -p super-lib/package.json

Building Angular Package
Building entry point 'super-lib'
Compiling TypeScript sources through ngc
Bundling to FESM2015
Bundling to FESM5
Bundling to UMD
Minifying UMD bundle
Copying declaration files
Writing package metadata
Removing scripts section in package.json as it's considered a potential security vulnerability.
Built super-lib
Built Angular Package!
 - from: D:\react\angular-libraries\ng-packagr-demo1\super-lib
 - to:   D:\react\angular-libraries\ng-packagr-demo1\super-lib\dist


--------------

D:\react\angular-libraries\ng-packagr-demo1>npm install super-lib/dist

D:\react\angular-libraries\ng-packagr-demo1>npm run start








